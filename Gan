-- External executor script

-- References to folders and specific parts
local clovaFolder = game:GetService("Workspace"):WaitForChild("clova")
local buttonsFolder = game:GetService("Workspace"):WaitForChild("Buttons")
local rollRarityTouch = game:GetService("Workspace")["Roll System"]:WaitForChild("RollRarity")

local player = game.Players.LocalPlayer -- Reference to the player
local character = player.Character or player.CharacterAdded:Wait() -- Ensure character is loaded
local rootPart = character:WaitForChild("HumanoidRootPart") -- Get the player's root part

local FIRE_RADIUS = 200 -- Radius within which parts will be processed
local EXCEPTION_NAMES = {["Super Multi Get"] = true, ["Prestige Get"] = true} -- Button exceptions

-- Function to process TouchTransmitter of a given part
local function processTouchTransmitter(part)
    local touchTransmitter = part:FindFirstChildOfClass("TouchTransmitter") -- Find TouchTransmitter
    if touchTransmitter then
        -- Fire the TouchTransmitter
        firetouchinterest(part, rootPart, 0)
        firetouchinterest(part, rootPart, 1)
    end
end

-- Function to monitor the clova folder
local function monitorClovaFolder()
    while true do
        for _, model in ipairs(clovaFolder:GetChildren()) do
            if model:IsA("Model") then
                local rootPart = model:FindFirstChildWhichIsA("BasePart") -- Handle any BasePart
                if rootPart then
                    processTouchTransmitter(rootPart)
                end
            end
        end
        wait() -- Independent loop delay
    end
end

-- Function to handle the RollRarity TouchInterest
local function monitorRollRarity()
    while true do
        if rollRarityTouch and rollRarityTouch:IsA("BasePart") then
            processTouchTransmitter(rollRarityTouch)
        end
        wait() -- Independent loop delay
    end
end

-- Function to process buttons independently
local function processButton(button)
    while true do
        if button:IsA("BasePart") and not EXCEPTION_NAMES[button.Name] then
            -- Check distance from the player
            local distance = (button.Position - rootPart.Position).Magnitude
            if distance <= FIRE_RADIUS and button.Material == Enum.Material.Neon then
                processTouchTransmitter(button)
            end
        end
        wait(0.1) -- Delay for processing each button independently
    end
end

-- Function to monitor buttons folder
local function monitorButtonsFolder()
    for _, button in ipairs(buttonsFolder:GetChildren()) do
        if button:IsA("BasePart") or button:IsA("MeshPart") then
            task.spawn(processButton, button) -- Create an independent loop for each button
        end
    end

    -- Listen for new buttons being added to the folder
    buttonsFolder.ChildAdded:Connect(function(button)
        if button:IsA("BasePart") or button:IsA("MeshPart") then
            task.spawn(processButton, button) -- Start processing the new button
        end
    end)
end

-- Start all functions in independent threads
task.spawn(monitorClovaFolder)
task.spawn(monitorRollRarity)
task.spawn(monitorButtonsFolder)
