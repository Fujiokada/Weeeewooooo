-- Services
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

-- Recording State
local recording = {}
local isRecording = false -- Start recording when toggled
local startTime = 0 -- To track relative times

-- Hook Function for Remotes
local function hookRemotes()
    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    setreadonly(mt, false)

    mt.__namecall = function(self, ...)
        local method = getnamecallmethod()
        local args = {...}

        -- Check if it's a RemoteEvent or RemoteFunction call
        if isRecording and (method == "FireServer" or method == "InvokeServer") then
            local eventInfo = {
                remoteName = self.Name,
                method = method,
                arguments = args,
                timestamp = os.clock() - startTime, -- Relative time
            }
            table.insert(recording, eventInfo)
            print("[Recorder] Recorded:", HttpService:JSONEncode(eventInfo))
        end

        -- Continue with the original function
        return oldNamecall(self, ...)
    end

    setreadonly(mt, true)
end

hookRemotes()

-- Start Recording
local function startRecording()
    if not isRecording then
        isRecording = true
        recording = {} -- Reset recording
        startTime = os.clock()
        print("[Recorder] Recording started.")
    else
        print("[Recorder] Already recording.")
    end
end

-- Stop Recording
local function stopRecording()
    if isRecording then
        isRecording = false
        print("[Recorder] Recording stopped.")
    else
        print("[Recorder] Not currently recording.")
    end
end

-- Save Recording to File
local function saveRecording(filename)
    if #recording == 0 then
        warn("[Recorder] No data to save!")
        return
    end

    local json = HttpService:JSONEncode(recording)
    writefile(filename, json)
    print("[Recorder] Recording saved to:", filename)
end

-- Handle Key Presses
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.F1 then
        if not isRecording then
            startRecording()
        else
            stopRecording()
            saveRecording("recording.txt") -- Save the file after stopping
        end
    end
end)

print("[Recorder] Press F1 to toggle recording.")
