-- Services and Player Setup
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Remotes
local skillEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("SkillEvent")
local spinEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("SpinEvent")

-- Variables
local farming = false
local spinning = false
local safePosition = Vector3.new(18872, 699, 958)
local platform = nil

-- Desirable Essences
local desiredEssences = {
    ["Cosmic Essence"] = true,
    ["Spatial Essence"] = true,
    ["Essence of Destruction"] = true,
    ["Arcane Essence"] = true
}

-- Helper Function to Fire SkillEvent
local function fireSkill(skill, position, rotation, timestamp, extra)
    local args = {skill, position, rotation, timestamp, extra}
    skillEvent:FireServer(unpack(args))
end

-- Create Platform Under Character
local function createSafePlatform()
    if platform then return end -- Prevent multiple platforms
    platform = Instance.new("Part")
    platform.Size = Vector3.new(10, 1, 10) -- Platform size
    platform.Anchored = true
    platform.Position = safePosition - Vector3.new(0, 2, 0) -- Position underneath character
    platform.Parent = workspace
    platform.BrickColor = BrickColor.new("Bright blue") -- For visibility
    print("Safe platform created at:", platform.Position)
end

-- Teleport to Safe Platform
local function teleportToSafePosition()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(safePosition)
    end
end

-- Farming Logic
local function autoFarm()
    while farming do
        task.wait(0.5) -- Prevents excessive load on the game
        
        -- Teleport to safe position
        teleportToSafePosition()
        
        -- Fire skill events (adjust position and rotation as needed)
        fireSkill("E", Vector3.new(733.5, 12.1, 644.9), CFrame.new(654.4, 15.1, 536.1), os.time(), "e1")
        fireSkill("R", Vector3.new(703.6, 16, 676.2), CFrame.new(701.3, 15.1, 618.7), os.time(), "e1")
        fireSkill("F", Vector3.new(704.4, 17.6, 676.7), CFrame.new(707.9, 15.1, 629.9), os.time(), "e1")
        fireSkill("E", Vector3.new(732, 24.2, 691.3), CFrame.new(730.5, 15.1, 666.4), os.time(), "e2")
        fireSkill("R", Vector3.new(761.3, 16.5, 702.6), CFrame.new(736.5, 15.1, 672.3), os.time(), "e2")
        fireSkill("F", Vector3.new(747.6, 18.7, 698.9), CFrame.new(742.6, 15.1, 678.2), os.time(), "e2")
        
        -- Check Level
        local level = LocalPlayer:FindFirstChild("Level")
        if level and level.Value >= 10 then
            spinning = true
            break
        end
    end
end

-- Spinner Logic
local function autoSpin()
    while spinning do
        task.wait(0.5) -- Prevents excessive load on the game
        
        -- Teleport to safe position
        teleportToSafePosition()
        
        -- Fire spin remote
        spinEvent:FireServer("e1")
        
        -- Check Spin Result
        local essences = LocalPlayer:FindFirstChild("Essences")
        if essences then
            for _, essence in pairs(essences:GetChildren()) do
                if desiredEssences[essence.Name] then
                    print("Desired essence obtained:", essence.Name)
                    spinning = false
                    break
                end
            end
        end
        
        -- Break the loop if spinning stops
        if not spinning then
            break
        end
    end
end

-- Toggle Script with "P" Key
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end -- Ignore processed inputs
    if input.KeyCode == Enum.KeyCode.P then
        farming = not farming -- Toggle farming
        spinning = false -- Reset spinning
        if farming then
            print("Auto-farm and spinner enabled")
            createSafePlatform() -- Create the safe platform
            task.spawn(function()
                while farming do
                    autoFarm()
                    if spinning then
                        autoSpin()
                    end
                end
            end)
        else
            print("Auto-farm and spinner disabled")
        end
    end
end)
