-- Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local folder = workspace:WaitForChild("SpawnedEnemies")
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

local teleportEnabled = false -- Toggle state

-- Function to teleport enemies in front of the player
local function teleportEnemies()
    for _, enemy in ipairs(folder:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("HumanoidRootPart") then
            local enemyRoot = enemy.HumanoidRootPart
            -- Calculate position 20 studs in front of the player
            local frontPosition = rootPart.CFrame * CFrame.new(0, 0, -20)
            enemyRoot.CFrame = frontPosition
        end
    end
end

-- Toggle function for loop
local function toggleTeleport()
    teleportEnabled = not teleportEnabled -- Toggle on/off
    print("Teleport Toggled:", teleportEnabled)
end

-- Listen for key press
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end -- Ignore if the game UI is consuming the input
    if input.KeyCode == Enum.KeyCode.P then
        toggleTeleport()
    end
end)

-- Detect when new enemies are added to the folder
folder.ChildAdded:Connect(function(child)
    if teleportEnabled and child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") then
        -- Teleport the new enemy immediately if teleport is active
        local enemyRoot = child.HumanoidRootPart
        local frontPosition = rootPart.CFrame * CFrame.new(0, 0, -20)
        enemyRoot.CFrame = frontPosition
    end
end)

-- Function to teleport "Bomb" to all enemies
local function teleportBombToEnemies(bombModel)
    -- Ensure the bomb has a primary part or a similar teleportable reference
    local bombPrimaryPart = bombModel.PrimaryPart or bombModel:FindFirstChild("HumanoidRootPart") or bombModel:FindFirstChildWhichIsA("BasePart")
    if not bombPrimaryPart then
        warn("No teleportable part found in Bomb model!")
        return
    end

    while bombModel and bombModel.Parent do
        for _, enemy in ipairs(folder:GetChildren()) do
            if enemy:IsA("Model") and enemy:FindFirstChild("HumanoidRootPart") then
                local enemyRoot = enemy.HumanoidRootPart
                bombPrimaryPart.CFrame = enemyRoot.CFrame * CFrame.new(0, 5, 0) -- Adjust to hover above the enemy
                task.wait(0.5) -- Delay to simulate looping through enemies
            end
        end
        task.wait(0.1) -- Prevent infinite fast-looping
    end
end

-- Detect when a Model named "Bomb" is added to the workspace
workspace.ChildAdded:Connect(function(child)
    if child:IsA("Model") and child.Name == "Bomb" then
        print("Bomb model detected! Starting teleport loop to enemies.")
        teleportBombToEnemies(child)
    end
end)

-- Loop to teleport existing enemies if enabled
runService.RenderStepped:Connect(function()
    if teleportEnabled then
        teleportEnemies()
    end
end)
