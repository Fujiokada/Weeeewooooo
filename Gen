-- External executor script

-- References to folders and specific part
local clovaFolder = game:GetService("Workspace"):WaitForChild("clova")
local buttonsFolder = game:GetService("Workspace"):WaitForChild("Buttons")
local rollRarityTouch = game:GetService("Workspace")["Roll System"]:WaitForChild("RollRarity")
local normalRuneRollRarity = game:GetService("Workspace").normal.runez:WaitForChild("RollRarity") -- Added part

local player = game.Players.LocalPlayer -- Reference to the player
local character = player.Character or player.CharacterAdded:Wait() -- Ensure character is loaded
local rootPart = character:WaitForChild("HumanoidRootPart") -- Get the player's root part

-- Function to process TouchTransmitter of a given part
local function processTouchTransmitter(part)
    local touchTransmitter = part:FindFirstChildOfClass("TouchTransmitter") -- Find TouchTransmitter
    if touchTransmitter then
        -- Fire the TouchTransmitter
        firetouchinterest(part, rootPart, 0)
        firetouchinterest(part, rootPart, 1)
    end
end

-- Independent loop for a single button
local function buttonLoop(button)
    while true do
        if button and button:IsA("BasePart") then
            processTouchTransmitter(button) -- Fire the TouchTransmitter
        end
        wait() -- Short delay between presses for each button
    end
end

-- Function to spawn loops for all buttons
local function initializeButtonLoops()
    for _, button in ipairs(buttonsFolder:GetChildren()) do
        if button:IsA("BasePart") then
            -- Skip excluded buttons
            if button.Name ~= "Super Multi Get" and button.Name ~= "Prestige Get" then
                -- Spawn independent loops for all buttons
                task.spawn(buttonLoop, button)
            end
        end
    end
end

-- Function to monitor the clova folder
local function monitorClovaFolder()
    while true do
        for _, model in ipairs(clovaFolder:GetChildren()) do
            if model:IsA("Model") then -- Process all models
                local rootPart = model:FindFirstChild("Root") -- Check for the "Root" part
                if rootPart and rootPart:IsA("BasePart") then
                    processTouchTransmitter(rootPart)
                end
            end
        end
        wait() -- Independent loop delay
    end
end

-- Function to handle the RollRarity TouchInterest
local function monitorRollRarity()
    while true do
        if rollRarityTouch and rollRarityTouch:IsA("BasePart") then
            processTouchTransmitter(rollRarityTouch)
        end
        wait() -- Independent loop delay
    end
end

-- Function to handle the normal.runez.RollRarity TouchInterest
local function monitorNormalRuneRollRarity()
    while true do
        if normalRuneRollRarity and normalRuneRollRarity:IsA("BasePart") then
            processTouchTransmitter(normalRuneRollRarity)
        end
        wait() -- Independent loop delay
    end
end

-- Start all functions in independent threads
task.spawn(monitorClovaFolder)
task.spawn(monitorRollRarity)
task.spawn(monitorNormalRuneRollRarity)
initializeButtonLoops() -- Start individual loops for all buttons
